<?xml version="1.0" encoding="UTF-8" ?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:p="http://www.springframework.org/schema/p"
	xsi:schemaLocation="http://www.springframework.org/schema/beans 
         http://www.springframework.org/schema/beans/spring-beans-3.0.xsd" 
    default-autowire="no">
  
<!-- bean的autowire属性可以覆盖beans的default-autowire属性，default-autowire作用范围为指定spring配置文件中的bean，而非应用上下文  -->

	<!-- 当我们对某个bean选择了自动装配策略时,仍然可以为任意一个属性配置property属性，即可以同时使用自动装配和显式装配策略,如果产生冲突则手动装配配置覆盖自动装配配置  -->     
   
   <bean id="people" class="com.spring.simplification.bean.autowire.People" />

	<!-- 未使用自动装配 -->
   <bean id="customerWithoutAuto" class="com.spring.simplification.bean.autowire.Customer">
   		<property name="people" ref="people"  />
   </bean>
   
   	<!-- 使用byName自动装配 -->
   	<!-- byName自动装配要求：如装配属性名（name）与spring应用上下文中某一bean名（id）相同则进行装配，如无则不进行装配（效果类似于ref） -->
   	<bean id="customerByName" class="com.spring.simplification.bean.autowire.Customer" autowire="byName"  />
   	
   	<!-- 使用byType自动装配 -->
   	<!-- byType自动装配要求：如装配属性类型（class）与spring应用上下文中某一bean类型（class）匹配（相同或子父类）则进行装配，如无则不进行装配，当多个bean类型与之匹配时则抛出异常 -->
   	<!-- 解决多个bean类型匹配问题可以采用：标志首选bean（primary属性，其中默认为true，表示为首选）或者取消某个bean的候选资格（autowire-candidate属性，设置为false为取消） -->
   	<bean id="customerByType" class="com.spring.simplification.bean.autowire.Customer" autowire="byType"  />
   	
   	<!-- 使用constructor自动装配 -->
	<!-- constructor自动装配要求：选择某一构造器并自动匹配所有入参bean，局限性同byType，若多个bean匹配某一构造器的入参或者该bean有多个构造器都满足自动装配条件时，都会抛出异常 -->
   	<bean id="customerByCons" class="com.spring.simplification.bean.autowire.Customer" autowire="constructor" />
	
	<!-- autowire="autodetect"中autodetect选项在spring3.0已经被弃用，但是在2.x可以使用，作用是先使用constructor自动装配，不匹配再使用byType自动装配 -->
	<!-- autowire="default"含义：采用和beans根标签中的default-autowire="属性值"一样的装配设置 -->
	<!-- autowire="no"含义：默认装配设置，不使用自动装配 -->
   	
</beans>
