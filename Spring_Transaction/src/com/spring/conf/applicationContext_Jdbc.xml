<?xml version="1.0" encoding="UTF-8"?>
<beans
	xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:aop="http://www.springframework.org/schema/aop"
	xmlns:tx="http://www.springframework.org/schema/tx"
	xsi:schemaLocation="http://www.springframework.org/schema/beans 
						http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
						http://www.springframework.org/schema/context
						http://www.springframework.org/schema/context/spring-context-3.0.xsd
						http://www.springframework.org/schema/aop
						http://www.springframework.org/schema/aop/spring-aop-3.0.xsd
						http://www.springframework.org/schema/tx 
						http://www.springframework.org/schema/tx/spring-tx-2.5.xsd">
	
	<!-- Jdbc + Spring Xml进行配置 -->
	
	<!-- 配置数据源 -->	
	<bean id="dataSource"
		class="org.apache.commons.dbcp.BasicDataSource">
		<property name="driverClassName" value="com.mysql.jdbc.Driver" />
		<property name="url" value="jdbc:mysql://localhost:3306/bookshop" />
		<property name="username" value="root"></property>
		<property name="password" value="justdoit111757"></property>
	</bean>
	
	<!-- 配置JdbcTemplate（对DAO层提供操作支持） -->
	<bean id="jdbcTemplate" class="org.springframework.jdbc.core.JdbcTemplate">
		<constructor-arg ref="dataSource"/>
	</bean>
	
	<!-- 配置事务管理器（对Service层提供事务管理） -->
	<bean id="transactionManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
		<property name="dataSource" ref="dataSource" />
	</bean>
	
	<!-- 配置事务增强 -->
	<tx:advice id="transactionAdvice" transaction-manager="transactionManager">
		<!-- 设置事务属性 -->
		<!-- name:方法名； propagation:传播行为；isolation:隔离级别；timeout:事务超时；read-only:是否只读；rollback-for:回滚异常；no-rollback-for:不回滚异常 -->
		<tx:attributes>
			<tx:method name="*" propagation="REQUIRED" isolation="DEFAULT" timeout="3" read-only="false" no-rollback-for="com.spring.exception.AccountException" />
		</tx:attributes>
	</tx:advice>
	
	<!-- 配置AOP（包括事务） -->
	<!-- 事务AOP用advisor，其它类型AOP用aspect -->
	<aop:config>
		<aop:pointcut expression="execution(* com.spring.service.*.*(..))" id="pc" />
		<aop:advisor advice-ref="transactionAdvice" pointcut-ref="pc" />
	</aop:config>
	
	
	<!-- 持久层bean -->
	<bean id="account" class="com.spring.bean.Account" />
	<bean id="book" class="com.spring.bean.Book" />
	<bean id="bookStock" class="com.spring.bean.BookStock" />
	
	<!-- Dao层bean -->
	<bean id="accountDao" class="com.spring.daoImpl.jdbc.AccountDaoImpl">
		<property name="jdbcTemplate" ref="jdbcTemplate" />
	</bean>
	<bean id="bookDao" class="com.spring.daoImpl.jdbc.BookDaoImpl">
		<property name="jdbcTemplate" ref="jdbcTemplate" />
	</bean>
	<bean id="bookStockDao" class="com.spring.daoImpl.jdbc.BookStockDaoImpl">
		<property name="jdbcTemplate" ref="jdbcTemplate" />
	</bean>
	
	<!-- Service层bean -->
	<bean id="cashierService" class="com.spring.serviceImpl.jdbc.CashierServiceImpl">
		<property name="accountDao" ref="accountDao" />
		<property name="bookDao" ref="bookDao" />
		<property name="bookStockDao" ref="bookStockDao" />
	</bean>
</beans>